version: '3.9'

services:

  postgres:
    image: postgres:15-alpine
    container_name: postgresql
    environment:
      POSTGRES_DB: "pdb"
      POSTGRES_USER: ${user}
      POSTGRES_PASSWORD: ${pswd}
    volumes:
      - ./pSQL/data:/var/lib/postgresql/data
      #- ./pSQL/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  mongodb:
    image: mongo:4.4.3
    container_name: mongodb
    volumes:
      - ./mongodb/data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${user}
      - MONGO_INITDB_ROOT_PASSWORD=${pswd}
    ports:
      - "27017:27017"
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.17.2
    container_name: "elastic"
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ./elasticsearch/data:/bitnami/elasticsearch/data
      - ./elasticsearch/data/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - app-network

  fastapi:
    build:
      context: ./code
      dockerfile: Dockerfile
    image: app/fastapi
    container_name: fastapi
    volumes:
      - ./code:/data/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      # `fastapi`Because the service (container) needs to be started first`depends_on`Is specified
      - fastapi
      #- frontend
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
